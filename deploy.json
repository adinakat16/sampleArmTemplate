{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "createNewVm": {
            "type": "bool",
            "defaultValue": true
        },
        "vmName": {
            "type": "string",
            "defaultValue": "egdeSolution-vmT4",
            "metadata": {
                "description": "The name of you Virtual Machine."
            }
        },
        "vmLocation": {
            "type": "string",
            "defaultValue": "West US",
            "allowedValues": [
                "(US) West US 2",
                "East US",
                "West US",
                "South Central US",
                "North Europe",
                "East Asia",
                "Japan East",
                "West Europe",
                "Southeast Asia",
                "Japan West",
                "North Central US",
                "Central US",
                "Brazil South",
                "East US 2",
                "Australia Southeast",
                "Australia East"
            ],
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_NC4as_T4_v3",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "secureString",
            "defaultValue": "",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "20.04-LTS",
            "allowedValues": [
                "12.04.5-LTS",
                "14.04.5-LTS",
                "16.04.0-LTS",
                "18.04-LTS",
                "20.04-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "iotHubName": {
            "type": "string",
            "defaultValue": ""
        },
        "sqlServerName": {
            "type": "string",
            "metadata": {
                "description": "name of sql server"
            }
        },
        "sqlUserName": {
            "type": "string",
            "defaultValue": "EdgeSolutionSQLuser",
            "metadata": {
                "description": "sqlusername"
            }
        },
        "sqlPassword": {
            "type": "secureString",
            "defaultValue": "",
            "metadata": {
                "description": "sql password"
            }
        }
    },
    "functions": [],
    "variables": {
        "networkSecurityGroupName": "[format('{0}-nsg', parameters('vmName'))]",
        "subnetName": "[format('{0}-subnet', parameters('vmName'))]",
        "virtualNetworkName": "[format('{0}-vNet', parameters('vmName'))]",
        "dnsLabelPrefix": "[toLower(format('{0}-{1}', parameters('vmName'), uniqueString(resourceGroup().id)))]",
        "publicIPAddressName": "[format('{0}PublicIP', parameters('vmName'))]",
        "networkInterfaceName": "[format('{0}NetInt', parameters('vmName'))]",
        "osDiskType": "Standard_LRS",
        "subnetAddressPrefix": "10.1.0.0/24",
        "addressPrefix": "10.1.0.0/16",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        }
    },
    "resources": [
        {
            "condition": "[equals(parameters('createNewVm'),bool(1))]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('vmLocation')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
            ]
        },
        {
            "condition": "[equals(parameters('createNewVm'), bool(1))]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('vmLocation')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 1000,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[equals(parameters('createNewVm'), bool(1))]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('vmLocation')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                }
            }
        },
        {
            "condition": "[equals(parameters('createNewVm'), bool(1))]",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[format('{0}/{1}', variables('virtualNetworkName'), variables('subnetName'))]",
            "properties": {
                "addressPrefix": "[variables('subnetAddressPrefix')]",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ]
        },
        {
            "condition": "[equals(parameters('createNewVm'), bool(1))]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('vmLocation')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabelPrefix')]"
                },
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "condition": "[equals(parameters('createNewVm'), bool(1))]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('vmName')]",
            "location": "[parameters('vmLocation')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            ]
        },
        {
            "name": "[parameters('sqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-08-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[parameters('sqlServerName')]"
            },
            "properties": {
                "administratorLogin": "[parameters('sqlUserName')]",
                "administratorLoginPassword": "[parameters('sqlPassword')]"
            }
        },
        {
            "name": "[parameters('iotHubName')]",
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S1",
                "capacity": 1
            },
            "properties": {
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 2
                    },
                    "operationsMonitoringEvents": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 2
                    }
                }
            }
        }
    ],
    "outputs": {}
}